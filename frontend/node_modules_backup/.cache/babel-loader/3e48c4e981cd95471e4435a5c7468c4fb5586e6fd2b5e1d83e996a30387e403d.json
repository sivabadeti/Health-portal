{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivab\\\\Downloads\\\\CODING\\\\WEB DEVELOPMENT\\\\KeralaDash\\\\frontend\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientsList() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Search filters\n  const [district, setDistrict] = useState(\"\");\n  const [disease, setDisease] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  // Function to fetch patients from backend\n  const fetchPatients = async () => {\n    setLoading(true);\n    let url = \"http://localhost:4000/patients\";\n    const params = new URLSearchParams();\n    if (district) params.append(\"district\", district);\n    if (disease) params.append(\"disease\", disease);\n    if (date) params.append(\"date\", date);\n    if (params.toString()) {\n      url += \"?\" + params.toString();\n    }\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setPatients(data);\n    } catch (err) {\n      console.error(\"Error fetching patients:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load all patients on first render\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Patients Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"District\",\n        value: district,\n        onChange: e => setDistrict(e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Disease\",\n        value: disease,\n        onChange: e => setDisease(e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        className: \"border p-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPatients,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No patients found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: patients.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border rounded p-2 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), \" (\", p.age, \", \", p.gender, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), \"Disease: \", p.disease, \" | District: \", p.district, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), \"Date: \", new Date(p.date).toLocaleDateString()]\n      }, p._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsList, \"73zjscP20RdsyTka2/gBHayBuMU=\");\n_c = PatientsList;\nvar _c;\n$RefreshReg$(_c, \"PatientsList\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","PatientsList","_s","patients","setPatients","loading","setLoading","district","setDistrict","disease","setDisease","date","setDate","fetchPatients","url","params","URLSearchParams","append","toString","res","fetch","data","json","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","map","p","name","age","gender","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/sivab/Downloads/CODING/WEB DEVELOPMENT/KeralaDash/frontend/src/components/dashboard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function PatientsList() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Search filters\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [disease, setDisease] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  // Function to fetch patients from backend\r\n  const fetchPatients = async () => {\r\n    setLoading(true);\r\n\r\n    let url = \"http://localhost:4000/patients\";\r\n    const params = new URLSearchParams();\r\n\r\n    if (district) params.append(\"district\", district);\r\n    if (disease) params.append(\"disease\", disease);\r\n    if (date) params.append(\"date\", date);\r\n\r\n    if (params.toString()) {\r\n      url += \"?\" + params.toString();\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      setPatients(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching patients:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Load all patients on first render\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Patients Records</h1>\r\n\r\n      {/* ðŸ”Ž Search Filters */}\r\n      <div className=\"flex gap-4 mb-6\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"District\"\r\n          value={district}\r\n          onChange={(e) => setDistrict(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Disease\"\r\n          value={disease}\r\n          onChange={(e) => setDisease(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n        <button\r\n          onClick={fetchPatients}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {/* Patient List */}\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : patients.length === 0 ? (\r\n        <p>No patients found</p>\r\n      ) : (\r\n        <ul className=\"space-y-2\">\r\n          {patients.map((p) => (\r\n            <li key={p._id} className=\"border rounded p-2 shadow-sm\">\r\n              <strong>{p.name}</strong> ({p.age}, {p.gender})  \r\n              <br />\r\n              Disease: {p.disease} | District: {p.district}  \r\n              <br />\r\n              Date: {new Date(p.date).toLocaleDateString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}